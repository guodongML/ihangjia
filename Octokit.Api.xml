<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Octokit.Api</name>
    </assembly>
    <members>
        <member name="M:Octokit.Authentication.BasicAuthenticator.Authenticate(Octokit.Internal.IRequest,Octokit.Http.ICredentials)">
            <summary>
            Authenticate a request using the basic access authentication scheme
            </summary>
            <param name="request">The request to authenticate</param>
            <param name="credentials">The credentials to attach to the request</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/#basic-authentication">Basic Authentication documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Authentication.TokenAuthenticator.Authenticate(Octokit.Internal.IRequest,Octokit.Http.ICredentials)">
            <summary>
            Authenticate a request using the OAuth2 Token (sent in a header) authentication scheme
            </summary>
            <param name="request">The request to authenticate</param>
            <param name="credentials">The credentials to attach to the request</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/#oauth2-token-sent-in-a-header">OAuth2 Token (sent in a header) documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.ApiClient">
            <summary>
            Base class for an API client.
            </summary>
        </member>
        <member name="M:Octokit.ApiClient.#ctor(Octokit.IApiConnection)">
            <summary>
            Initializes a new API client.
            </summary>
            <param name="apiConnection">The client's connection</param>
        </member>
        <member name="P:Octokit.ApiClient.ApiConnection">
            <summary>
            Gets the API client's connection.
            </summary>
            <value>
            The API client's connection
            </value>
        </member>
        <member name="P:Octokit.ApiClient.Connection">
            <summary>
            Returns the underlying <see cref="T:Octokit.Http.IConnection"/> used by the <see cref="T:Octokit.IApiConnection"/>. This is useful
            for requests that need to access the HTTP response and not just the response model.
            </summary>
        </member>
        <member name="T:Octokit.ApiPagination">
            <summary>
            Used to paginate through API response results.
            </summary>
            <remarks>
            This is meant to be internal, but I factored it out so we can change our mind more easily later.
            </remarks>
        </member>
        <member name="T:Octokit.ApiException">
            <summary>
            Represents errors that occur from the GitHub API.
            </summary>
        </member>
        <member name="M:Octokit.ApiException.#ctor">
            <summary>
            Constructs an instance of ApiException
            </summary>
        </member>
        <member name="M:Octokit.ApiException.#ctor(System.String,System.Net.HttpStatusCode)">
            <summary>
            Constructs an instance of ApiException
            </summary>
            <param name="message">The error message</param>
            <param name="httpStatusCode">The HTTP status code from the response</param>
        </member>
        <member name="M:Octokit.ApiException.#ctor(System.String,System.Exception,Octokit.Internal.IDataFormatSerializer)">
            <summary>
            Constructs an instance of ApiException
            </summary>
            <param name="message">The error message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.ApiException.#ctor(Octokit.Http.IResponse,Octokit.Internal.IDataFormatSerializer)">
            <summary>
            Constructs an instance of ApiException
            </summary>
            <param name="response">The HTTP payload from the server</param>
        </member>
        <member name="M:Octokit.ApiException.#ctor(Octokit.Http.IResponse,System.Exception,Octokit.Internal.IDataFormatSerializer)">
            <summary>
            Constructs an instance of ApiException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.ApiException.#ctor(Octokit.ApiException)">
            <summary>
            Constructs an instance of ApiException
            </summary>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Octokit.ApiException.StatusCode">
            <summary>
            The HTTP status code associated with the repsonse
            </summary>
        </member>
        <member name="P:Octokit.ApiException.ApiError">
            <summary>
            The raw exception payload from the response
            </summary>
        </member>
        <member name="M:Octokit.ApiException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of ApiException.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="P:Octokit.ApiException.ApiErrorMessageSafe">
            <summary>
            Get the inner error message from the API response
            </summary>
            <remarks>
            Returns null if ApiError is not populated
            </remarks>
        </member>
        <member name="T:Octokit.ApiValidationException">
            <summary>
            Represents a HTTP 422 - Unprocessable Entity response returned from the API.
            </summary>
        </member>
        <member name="M:Octokit.ApiValidationException.#ctor">
            <summary>
            Constructs an instance of ApiValidationException
            </summary>
        </member>
        <member name="M:Octokit.ApiValidationException.#ctor(Octokit.Http.IResponse,Octokit.Internal.IDataFormatSerializer)">
            <summary>
            Constructs an instance of ApiValidationException
            </summary>
            <param name="response">The HTTP payload from the server</param>
        </member>
        <member name="M:Octokit.ApiValidationException.#ctor(Octokit.Http.IResponse,System.Exception,Octokit.Internal.IDataFormatSerializer)">
            <summary>
            Constructs an instance of ApiValidationException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.ApiValidationException.#ctor(Octokit.ApiException)">
            <summary>
            Constructs an instance of ApiValidationException
            </summary>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.ApiValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of ApiValidationException
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.AuthorizationException">
            <summary>
            Represents a HTTP 401 - Unauthorized response returned from the API.
            </summary>
        </member>
        <member name="M:Octokit.AuthorizationException.#ctor">
            <summary>
            Constructs an instance of AuthorizationException
            </summary>
        </member>
        <member name="M:Octokit.AuthorizationException.#ctor(Octokit.Http.IResponse,Octokit.Internal.IDataFormatSerializer)">
            <summary>
            Constructs an instance of AuthorizationException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="dataFormatSerializer">Use the deserialize error response payload.</param>
        </member>
        <member name="M:Octokit.AuthorizationException.#ctor(Octokit.Http.IResponse,System.Exception,Octokit.Internal.IDataFormatSerializer)">
            <summary>
            Constructs an instance of AuthorizationException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
            <param name="dataFormatSerializer">Use the deserialize error response payload.</param>
        </member>
        <member name="M:Octokit.AuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of AuthorizationException.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.ForbiddenException">
            <summary>
            Represents a HTTP 403 - Forbidden response returned from the API.
            </summary>
        </member>
        <member name="M:Octokit.ForbiddenException.#ctor(Octokit.Http.IResponse,Octokit.Internal.IDataFormatSerializer)">
            <summary>
            Constructs an instance of ForbiddenException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="dataFormatSerializer">Used to deserialize error response payloads</param>
        </member>
        <member name="M:Octokit.ForbiddenException.#ctor(Octokit.Http.IResponse,System.Exception,Octokit.Internal.IDataFormatSerializer)">
            <summary>
            Constructs an instance of ForbiddenException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
            <param name="dataFormatSerializer">Used to deserialize error response payloads</param>
        </member>
        <member name="M:Octokit.ForbiddenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of ForbiddenException
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.LoginAttemptsExceededException">
            <summary>
            Represents a "Login Attempts Exceeded" response returned from the API.
            </summary>
        </member>
        <member name="M:Octokit.LoginAttemptsExceededException.#ctor(Octokit.Http.IResponse,Octokit.Internal.IDataFormatSerializer)">
            <summary>
            Constructs an instance of LoginAttemptsExceededException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="dataFormatSerializer">Use the deserialize error response payload.</param>
        </member>
        <member name="M:Octokit.LoginAttemptsExceededException.#ctor(Octokit.Http.IResponse,System.Exception,Octokit.Internal.IDataFormatSerializer)">
            <summary>
            Constructs an instance of LoginAttemptsExceededException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
            <param name="dataFormatSerializer">Use the deserialize error response payload.</param>
        </member>
        <member name="M:Octokit.LoginAttemptsExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of LoginAttemptsExceededException
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.NotFoundException">
            <summary>
            Represents a HTTP 404 - Not Found response returned from the API.
            </summary>
        </member>
        <member name="M:Octokit.NotFoundException.#ctor(Octokit.Http.IResponse)">
            <summary>
            Constructs an instance of NotFoundException
            </summary>
            <param name="response">The HTTP payload from the server</param>
        </member>
        <member name="M:Octokit.NotFoundException.#ctor(System.String,System.Net.HttpStatusCode)">
            <summary>
            Constructs an instance of NotFoundException
            </summary>
            <param name="message">The exception message</param>
            <param name="statusCode">The http status code returned by the response</param>
        </member>
        <member name="M:Octokit.NotFoundException.#ctor(Octokit.Http.IResponse,System.Exception)">
            <summary>
            Constructs an instance of NotFoundException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.NotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of NotFoundException
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.RateLimitExceededException">
            <summary>
            Exception thrown when GitHub API Rate limits are exceeded.
            </summary>
            <summary>
            <para>
            For requests using Basic Authentication or OAuth, you can make up to 5,000 requests per hour. For
            unauthenticated requests, the rate limit allows you to make up to 60 requests per hour.
            </para>
            <para>See http://developer.github.com/v3/#rate-limiting for more details.</para>
            </summary>
        </member>
        <member name="M:Octokit.RateLimitExceededException.#ctor(Octokit.Http.IResponse,Octokit.Internal.IDataFormatSerializer)">
            <summary>
            Constructs an instance of RateLimitExceededException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="dataFormatSerializer">Use the deserialize error response payload.</param>
        </member>
        <member name="M:Octokit.RateLimitExceededException.#ctor(Octokit.Http.IResponse,System.Exception,Octokit.Internal.IDataFormatSerializer)">
            <summary>
            Constructs an instance of RateLimitExceededException
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="innerException">The inner exception</param>
            <param name="dataFormatSerializer">Use the deserialize error response payload.</param>
        </member>
        <member name="P:Octokit.RateLimitExceededException.Limit">
            <summary>
            The maximum number of requests that the consumer is permitted to make per hour.
            </summary>
        </member>
        <member name="P:Octokit.RateLimitExceededException.Remaining">
            <summary>
            The number of requests remaining in the current rate limit window.
            </summary>
        </member>
        <member name="P:Octokit.RateLimitExceededException.Reset">
            <summary>
            The date and time at which the current rate limit window resets
            </summary>
        </member>
        <member name="M:Octokit.RateLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of RateLimitExceededException
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.TwoFactorAuthorizationException">
            <summary>
            Represents a failed 2FA challenge from the API
            </summary>
        </member>
        <member name="M:Octokit.TwoFactorAuthorizationException.#ctor(Octokit.TwoFactorType,System.Exception)">
            <summary>
            Constructs an instance of TwoFactorRequiredException.
            </summary>
            <param name="twoFactorType">Expected 2FA response type</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.TwoFactorAuthorizationException.#ctor(Octokit.Http.IResponse,Octokit.TwoFactorType,Octokit.Internal.IDataFormatSerializer)">
            <summary>
            Constructs an instance of TwoFactorRequiredException.
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="twoFactorType">Expected 2FA response type</param>
            <param name="dataFormatSerializer">Use the deserialize error response payload.</param>
        </member>
        <member name="M:Octokit.TwoFactorAuthorizationException.#ctor(Octokit.Http.IResponse,Octokit.TwoFactorType,System.Exception,Octokit.Internal.IDataFormatSerializer)">
            <summary>
            Constructs an instance of TwoFactorRequiredException.
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="twoFactorType">Expected 2FA response type</param>
            <param name="innerException">The inner exception</param>
            <param name="dataFormatSerializer">Use the deserialize error response payload.</param>
        </member>
        <member name="P:Octokit.TwoFactorAuthorizationException.TwoFactorType">
            <summary>
            Expected 2FA response type
            </summary>
        </member>
        <member name="M:Octokit.TwoFactorAuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of TwoFactorRequiredException.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.TwoFactorType">
            <summary>
            Methods for receiving 2FA authentication codes
            </summary>
        </member>
        <member name="F:Octokit.TwoFactorType.None">
            <summary>
            No method configured
            </summary>
        </member>
        <member name="F:Octokit.TwoFactorType.Unknown">
            <summary>
            Unknown method
            </summary>
        </member>
        <member name="F:Octokit.TwoFactorType.Sms">
            <summary>
            Receive via SMS
            </summary>
        </member>
        <member name="F:Octokit.TwoFactorType.AuthenticatorApp">
            <summary>
            Receive via application
            </summary>
        </member>
        <member name="T:Octokit.TwoFactorChallengeFailedException">
            <summary>
            Represents a failed 2FA challenge from the API
            </summary>
        </member>
        <member name="M:Octokit.TwoFactorChallengeFailedException.#ctor">
            <summary>
            Constructs an instance of TwoFactorChallengeFailedException
            </summary>
        </member>
        <member name="M:Octokit.TwoFactorChallengeFailedException.#ctor(System.String,Octokit.ApiException)">
            <summary>
            Constructs an instance of TwoFactorChallengeFailedException
            </summary>
            <param name="authorizationCode">The authorization code that was incorrect</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Octokit.TwoFactorChallengeFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of TwoFactorChallengeFailedException.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.TwoFactorRequiredException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Octokit.TwoFactorRequiredException.#ctor">
            <summary>
            Constructs an instance of TwoFactorRequiredException.
            </summary>
        </member>
        <member name="M:Octokit.TwoFactorRequiredException.#ctor(Octokit.TwoFactorType)">
            <summary>
            Constructs an instance of TwoFactorRequiredException.
            </summary>
            <param name="twoFactorType">Expected 2FA response type</param>
        </member>
        <member name="M:Octokit.TwoFactorRequiredException.#ctor(Octokit.Http.IResponse,Octokit.TwoFactorType,Octokit.Internal.IDataFormatSerializer)">
            <summary>
            Constructs an instance of TwoFactorRequiredException.
            </summary>
            <param name="response">The HTTP payload from the server</param>
            <param name="twoFactorType">Expected 2FA response type</param>
            <param name="dataFormatSerializer">Use the deserialize error response payload.</param>
        </member>
        <member name="M:Octokit.TwoFactorRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an instance of TwoFactorRequiredException.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Octokit.ApiExtensions">
            <summary>
            Extensions for working with the <see cref="T:Octokit.IApiConnection"/>
            </summary>
        </member>
        <member name="M:Octokit.ApiExtensions.Get``1(Octokit.IApiConnection,System.Uri)">
            <summary>
            Gets the API resource at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource to get.</typeparam>
            <param name="connection">The connection to use</param>
            <param name="uri">URI of the API resource to get</param>
            <returns>The API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiExtensions.GetAll``1(Octokit.IApiConnection,System.Uri)">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="connection">The connection to use</param>
            <param name="uri">URI of the API resource to get</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the The API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiExtensions.GetHtml(Octokit.IApiConnection,System.Uri)">
            <summary>
            Gets the HTML content of the API resource at the specified URI.
            </summary>
            <param name="connection">The connection to use</param>
            <param name="uri">URI of the API resource to get</param>
            <returns>The API resource's HTML content.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiExtensions.GetHtml(Octokit.Http.IConnection,System.Uri)">
            <summary>
            Performs an asynchronous HTTP GET request that expects a <seealso cref="T:Octokit.Http.IResponse"/> containing HTML.
            </summary>
            <param name="connection">The connection to use</param>
            <param name="uri">URI endpoint to send request to</param>
            <returns><seealso cref="T:Octokit.Http.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.ApiExtensions.GetResponse``1(Octokit.Http.IConnection,System.Uri)">
            <summary>
            Gets the API resource at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource to get.</typeparam>
            <param name="connection">The connection to use</param>
            <param name="uri">URI of the API resource to get</param>
            <returns>The API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiExtensions.GetResponse``1(Octokit.Http.IConnection,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Gets the API resource at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource to get.</typeparam>
            <param name="connection">The connection to use</param>
            <param name="uri">URI of the API resource to get</param>
            <param name="cancellationToken">A token used to cancel the GetResponse request</param>
            <returns>The API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiExtensions.IsTrue(Octokit.Http.IResponse)">
            <summary>
            Returns true if the API call represents a true response, or false if it represents a false response.
            Throws an exception if the HTTP status does not match either a true or false response.
            </summary>
            <remarks>
            Some API endpoints return a 204 for "true" and 404 for false. See https://developer.github.com/v3/activity/starring/#check-if-you-are-starring-a-repository
            for one example. This encapsulates that logic.
            </remarks>
            <exception cref="T:Octokit.ApiException">Thrown if the status is neither 204 nor 404</exception>
            <param name="response">True for a 204 response, False for a 404</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.Ensure">
            <summary>
              Ensure input parameters
            </summary>
        </member>
        <member name="M:Octokit.Ensure.ArgumentNotNull(System.Object,System.String)">
            <summary>
            Checks an argument to ensure it isn't null.
            </summary>
            <param name = "value">The argument value to check</param>
            <param name = "name">The name of the argument</param>
        </member>
        <member name="M:Octokit.Ensure.ArgumentNotNullOrEmptyString(System.String,System.String)">
            <summary>
            Checks a string argument to ensure it isn't null or empty.
            </summary>
            <param name = "value">The argument value to check</param>
            <param name = "name">The name of the argument</param>
        </member>
        <member name="M:Octokit.Ensure.GreaterThanZero(System.TimeSpan,System.String)">
            <summary>
            Checks a timespan argument to ensure it is a positive value.
            </summary>
            <param name = "value">The argument value to check</param>
            <param name = "name">The name of the argument</param>
        </member>
        <member name="T:Octokit.Internal.ParameterAttribute">
            <summary>
            Indicate to the serializer that this property or value 
            has a different representation when being serialized to JSON
            </summary>
        </member>
        <member name="P:Octokit.Internal.ParameterAttribute.Key">
            <summary>
            The key to use in place of the property's name
            </summary>
        </member>
        <member name="P:Octokit.Internal.ParameterAttribute.Value">
            <summary>
            The name to use in place of the enum's value
            </summary>
        </member>
        <member name="T:Octokit.Internal.SerializeNullAttribute">
            <summary>
            Indicate to the serializer that this property or field
            should be included, even when currently set to `null`
            </summary>
        </member>
        <member name="T:Octokit.Internal.HttpClientAdapter">
            <summary>
            Generic Http client. Useful for those who want to swap out System.Net.HttpClient with something else.
            </summary>
            <remarks>
            Most folks won't ever need to swap this out. But if you're trying to run this on Windows Phone, you might.
            </remarks>
        </member>
        <member name="M:Octokit.Internal.HttpClientAdapter.Send(Octokit.Internal.IRequest,System.Threading.CancellationToken)">
            <summary>
            Sends the specified request and returns a response.
            </summary>
            <param name="request">A <see cref="T:Octokit.Internal.IRequest"/> that represents the HTTP request</param>
            <param name="cancellationToken">Used to cancel the request</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> of <see cref="T:Octokit.Http.IResponse"/></returns>
        </member>
        <member name="T:Octokit.Internal.Response">
            <summary>
            Represents a generic HTTP response
            </summary>
        </member>
        <member name="P:Octokit.Internal.Response.Body">
            <summary>
            Raw response body. Typically a string, but when requesting images, it will be a byte array.
            </summary>
        </member>
        <member name="P:Octokit.Internal.Response.Headers">
            <summary>
            Information about the API.
            </summary>
        </member>
        <member name="P:Octokit.Internal.Response.ApiInfo">
            <summary>
            Information about the API response parsed from the response headers.
            </summary>
        </member>
        <member name="P:Octokit.Internal.Response.StatusCode">
            <summary>
            The response status code.
            </summary>
        </member>
        <member name="P:Octokit.Internal.Response.ContentType">
            <summary>
            The content type of the response.
            </summary>
        </member>
        <member name="T:Octokit.Helpers.SerializeAsBase64Attribute">
            <summary>
            Attribute used to denote that a string property should be serialized as a base64 encoded string.
            </summary>
        </member>
        <member name="T:Octokit.Helpers.UnixTimestampExtensions">
            <summary>
            Extensions for converting between different time representations
            </summary>
        </member>
        <member name="M:Octokit.Helpers.UnixTimestampExtensions.FromUnixTime(System.Int64)">
            <summary>
            Convert a Unix tick to a <see cref="T:System.DateTimeOffset"/> with UTC offset
            </summary>
            <param name="unixTime">UTC tick</param>
        </member>
        <member name="M:Octokit.Helpers.UnixTimestampExtensions.ToUnixTime(System.DateTimeOffset)">
            <summary>
            Convert <see cref="T:System.DateTimeOffset"/> with UTC offset to a Unix tick
            </summary>
            <param name="date">Date Time with UTC offset</param>
        </member>
        <member name="T:Octokit.UriExtensions">
            <summary>
            Extensions for working with Uris
            </summary>
        </member>
        <member name="M:Octokit.UriExtensions.ApplyParameters(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Merge a dictionary of valeus with an existing <see cref="T:System.Uri"/>
            </summary>
            <param name="uri">Original request Uri</param>
            <param name="parameters">Collection of key-value pairs</param>
            <returns>Updated request Uri</returns>
        </member>
        <member name="T:Octokit.ApiConnection">
            <summary>
            A connection for making API requests against URI endpoints.
            Provides type-friendly convenience methods that wrap <see cref="T:Octokit.Http.IConnection"/> methods.
            </summary>
        </member>
        <member name="M:Octokit.ApiConnection.#ctor(Octokit.Http.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.ApiConnection"/> class.
            </summary>
            <param name="connection">A connection for making HTTP requests</param>
        </member>
        <member name="M:Octokit.ApiConnection.#ctor(Octokit.Http.IConnection,Octokit.Helpers.IApiPagination)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.ApiConnection"/> class.
            </summary>
            <param name="connection">A connection for making HTTP requests</param>
            <param name="pagination">A paginator for paging API responses</param>
        </member>
        <member name="P:Octokit.ApiConnection.Connection">
            <summary>
            The underlying connection.
            </summary>
        </member>
        <member name="M:Octokit.ApiConnection.Get``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets the API resource at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource to get.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <returns>The API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Get``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Gets the API resource at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource to get.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <param name="accepts">Accept header to use for the API request</param>
            <returns>The API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.GetHtml(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets the HTML content of the API resource at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <returns>The API resource's HTML content.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.GetAll``1(System.Uri)">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the The API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.GetAll``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the The API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.GetAll``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Gets all API resources in the list at the specified URI.
            </summary>
            <typeparam name="T">Type of the API resource in the list.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="parameters">Parameters to add to the API request</param>
            <param name="accepts">Accept header to use for the API request</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of the The API resources in the list.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Post(System.Uri)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <returns><seealso cref="T:System.Net.HttpStatusCode"/>Representing the received HTTP response</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Post``1(System.Uri,System.Object)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="data">Object that describes the new API resource; this will be serialized and used as the request's body</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Post``1(System.Uri,System.Object,System.String)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="data">Object that describes the new API resource; this will be serialized and used as the request's body</param>
            <param name="accepts">Accept header to use for the API request</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Post``1(System.Uri,System.Object,System.String,System.String)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="data">Object that describes the new API resource; this will be serialized and used as the request's body</param>
            <param name="accepts">Accept header to use for the API request</param>
            <param name="contentType">Content type of the API request</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Post``1(System.Uri,System.Object,System.String,System.String,System.String)">
            <summary>
            Creates a new API resource in the list at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to get</param>
            <param name="data">Object that describes the new API resource; this will be serialized and used as the request's body</param>
            <param name="accepts">Accept header to use for the API request</param>
            <param name="contentType">Content type of the API request</param>
            <param name="twoFactorAuthenticationCode">Two Factor Authentication Code</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Put(System.Uri)">
            <summary>
            Creates or replaces the API resource at the specified URI
            </summary>
            <param name="uri">URI of the API resource to put</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.ApiConnection.Put``1(System.Uri,System.Object)">
            <summary>
            Creates or replaces the API resource at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to create or replace</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Put``1(System.Uri,System.Object,System.String)">
            <summary>
            Creates or replaces the API resource at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to create or replace</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code in response to the current user's previous challenge</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Put``1(System.Uri,System.Object,System.String,System.String)">
            <summary>
            Creates or replaces the API resource at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to create or replace</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code in response to the current user's previous challenge</param>
            <param name="accepts">Accept header to use for the API request</param>
            <returns>The created API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Patch(System.Uri)">
            <summary>
            Updates the API resource at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to patch</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.ApiConnection.Patch``1(System.Uri,System.Object)">
            <summary>
            Updates the API resource at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to update</param>
            /// <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <returns>The updated API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Patch``1(System.Uri,System.Object,System.String)">
            <summary>
            Updates the API resource at the specified URI.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to update</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <param name="accepts">Accept header to use for the API request</param>
            <returns>The updated API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="M:Octokit.ApiConnection.Delete(System.Uri)">
            <summary>
            Deletes the API object at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to delete</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.ApiConnection.Delete(System.Uri,System.String)">
            <summary>
            Deletes the API object at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to delete</param>
            <param name="twoFactorAuthenticationCode">Two Factor Code</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.ApiConnection.Delete(System.Uri,System.Object)">
            <summary>
            Deletes the API object at the specified URI.
            </summary>
            <param name="uri">URI of the API resource to delete</param>
            <param name="data">Object that describes the API resource; this will be serialized and used as the request's body</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for the request's execution.</returns>
        </member>
        <member name="M:Octokit.ApiConnection.GetRedirect(System.Uri)">
            <summary>
            Executes a GET to the API object at the specified URI. This operation is appropriate for
            API calls which wants to return the redirect URL.
            It expects the API to respond with a 302 Found.
            </summary>
            <param name="uri">URI of the API resource to get</param>
            <returns>The URL returned by the API in the Location header</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs, or the API does not respond with a 302 Found</exception>
        </member>
        <member name="M:Octokit.ApiConnection.GetQueuedOperation``1(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Executes a GET to the API object at the specified URI. This operation is appropriate for API calls which 
            queue long running calculations and return a collection of a resource.
            It expects the API to respond with an initial 202 Accepted, and queries again until a 200 OK is received.
            It returns an empty collection if it receives a 204 No Content response.
            </summary>
            <typeparam name="T">The API resource's type.</typeparam>
            <param name="uri">URI of the API resource to update</param>
            <param name="cancellationToken">A token used to cancel this potentially long running request</param>
            <returns>The updated API resource.</returns>
            <exception cref="T:Octokit.ApiException">Thrown when an API error occurs.</exception>
        </member>
        <member name="T:Octokit.ApiInfo">
            <summary>
            Extra information returned as part of each api response.
            </summary>
        </member>
        <member name="P:Octokit.ApiInfo.OauthScopes">
            <summary>
            Oauth scopes that were included in the token used to make the request.
            </summary>
        </member>
        <member name="P:Octokit.ApiInfo.AcceptedOauthScopes">
            <summary>
            Oauth scopes accepted for this particular call.
            </summary>
        </member>
        <member name="P:Octokit.ApiInfo.Etag">
            <summary>
            Etag
            </summary>
        </member>
        <member name="P:Octokit.ApiInfo.Links">
            <summary>
            Links to things like next/previous pages
            </summary>
        </member>
        <member name="P:Octokit.ApiInfo.RateLimit">
            <summary>
            Information about the API rate limit
            </summary>
        </member>
        <member name="M:Octokit.ApiInfo.Clone">
            <summary>
            Allows you to clone ApiInfo 
            </summary>
            <returns>A clone of <seealso cref="T:Octokit.ApiInfo"/></returns>
        </member>
        <member name="T:Octokit.Connection">
            <summary>
            A connection for making HTTP requests against URI endpoints.
            </summary>
        </member>
        <member name="M:Octokit.Connection.#ctor(Octokit.ProductHeaderValue,System.Uri,Octokit.Http.ICredentialStore,Octokit.Http.IDataFormatPipeline)">
            <summary>
            
            </summary>
            <param name="productInformation"></param>
            <param name="baseAddress"></param>
            <param name="credentialStore"></param>
            <param name="serializer"></param>
            <param name="dataPipeline"></param>
        </member>
        <member name="M:Octokit.Connection.#ctor(Octokit.ProductHeaderValue,System.Uri,Octokit.Http.ICredentialStore,Octokit.Internal.IHttpClient,Octokit.Http.IDataFormatPipeline)">
            <summary>
            Creates a new connection instance used to make requests of the GitHub API.
            </summary>
            <param name="productInformation">
            The name (and optionally version) of the product using this library. This is sent to the server as part of
            the user agent for analytics purposes.
            </param>
            <param name="baseAddress">
            The address to point this client to such as https://api.github.com or the URL to a GitHub Enterprise 
            instance</param>
            <param name="credentialStore">Provides credentials to the client when making requests</param>
            <param name="httpClient">A raw <see cref="T:Octokit.Internal.IHttpClient"/> used to make requests</param>
            <param name="serializer">Class used to serialize and deserialize JSON requests</param>
        </member>
        <member name="M:Octokit.Connection.GetLastApiInfo">
            <summary>
            Gets the latest API Info - this will be null if no API calls have been made
            </summary>
            <returns><seealso cref="T:Octokit.ApiInfo"/> representing the information returned as part of an Api call</returns>
        </member>
        <member name="M:Octokit.Connection.Get``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Boolean)">
            <summary>
            Performs an asynchronous HTTP GET request.
            Attempts to map the response to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="parameters">Querystring parameters for the request</param>
            <param name="accepts">Specifies accepted response media types.</param>
            <param name="allowAutoRedirect">To follow redirect links automatically or not</param>
            <returns><seealso cref="T:Octokit.Http.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.Connection.GetHtml(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Performs an asynchronous HTTP GET request that expects a <seealso cref="T:Octokit.Http.IResponse"/> containing HTML.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="parameters">Querystring parameters for the request</param>
            <returns><seealso cref="T:Octokit.Http.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.Connection.Post(System.Uri)">
            <summary>
            Performs an asynchronous HTTP POST request.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <returns><seealso cref="T:Octokit.Http.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.Connection.Post``1(System.Uri,System.Object,System.String,System.String,System.String)">
            <summary>
            Performs an asynchronous HTTP POST request.
            Attempts to map the response body to an object of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type to map the response to</typeparam>
            <param name="uri">URI endpoint to send request to</param>
            <param name="body">The object to serialize as the body of the request</param>
            <param name="accepts">Specifies accepted response media types.</param>
            <param name="contentType">Specifies the media type of the request body</param>
            <param name="twoFactorAuthenticationCode">Two Factor Authentication Code</param>
            <returns><seealso cref="T:Octokit.Http.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.Connection.Patch(System.Uri)">
            <summary>
            Performs an asynchronous HTTP PATCH request.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <returns><seealso cref="T:Octokit.Http.IResponse"/> representing the received HTTP response</returns>
        </member>
        <member name="M:Octokit.Connection.Put(System.Uri)">
            <summary>
            Performs an asynchronous HTTP PUT request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.Connection.Delete(System.Uri)">
            <summary>
            Performs an asynchronous HTTP DELETE request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.Connection.Delete(System.Uri,System.String)">
            <summary>
            Performs an asynchronous HTTP DELETE request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="twoFactorAuthenticationCode">Two Factor Code</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="M:Octokit.Connection.Delete(System.Uri,System.Object)">
            <summary>
            Performs an asynchronous HTTP DELETE request that expects an empty response.
            </summary>
            <param name="uri">URI endpoint to send request to</param>
            <param name="data">The object to serialize as the body of the request</param>
            <returns>The returned <seealso cref="T:System.Net.HttpStatusCode"/></returns>
        </member>
        <member name="P:Octokit.Connection.BaseAddress">
            <summary>
            Base address for the connection.
            </summary>
        </member>
        <member name="P:Octokit.Connection.CredentialStore">
            <summary>
            Gets the <seealso cref="T:Octokit.Http.ICredentialStore"/> used to provide credentials for the connection.
            </summary>
        </member>
        <member name="P:Octokit.Connection.Credentials">
            <summary>
            Gets or sets the credentials used by the connection.
            </summary>
            <remarks>
            You can use this property if you only have a single hard-coded credential. Otherwise, pass in an 
            <see cref="T:Octokit.Http.ICredentialStore"/> to the constructor. 
            Setting this property will change the <see cref="T:Octokit.Http.ICredentialStore"/> to use 
            the default <see cref="T:Octokit.Internal.InMemoryCredentialStore"/> with just these credentials.
            </remarks>
        </member>
        <member name="P:Octokit.RateLimit.Limit">
            <summary>
            The maximum number of requests that the consumer is permitted to make per hour.
            </summary>
        </member>
        <member name="P:Octokit.RateLimit.Remaining">
            <summary>
            The number of requests remaining in the current rate limit window.
            </summary>
        </member>
        <member name="P:Octokit.RateLimit.Reset">
            <summary>
            The date and time at which the current rate limit window resets
            </summary>
        </member>
        <member name="P:Octokit.RateLimit.ResetAsUtcEpochSeconds">
            <summary>
            The date and time at which the current rate limit window resets - in UTC epoch seconds
            </summary>
        </member>
        <member name="M:Octokit.RateLimit.Clone">
            <summary>
            Allows you to clone RateLimit
            </summary>
            <returns>A clone of <seealso cref="T:Octokit.RateLimit"/></returns>
        </member>
        <member name="T:Octokit.ApiError">
            <summary>
            Error payload from the API reposnse
            </summary>
        </member>
        <member name="P:Octokit.ApiError.Message">
            <summary>
            The error message
            </summary>
        </member>
        <member name="P:Octokit.ApiError.DocumentationUrl">
            <summary>
            URL to the documentation for this error.
            </summary>
        </member>
        <member name="P:Octokit.ApiError.Errors">
            <summary>
            Additional details about the error
            </summary>
        </member>
    </members>
</doc>
